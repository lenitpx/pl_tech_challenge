[{"/mnt/c/Users/Helen/webprojects/challenges/postlight_employee_directory_challenge/src/index.js":"1","/mnt/c/Users/Helen/webprojects/challenges/postlight_employee_directory_challenge/src/App.js":"2","/mnt/c/Users/Helen/webprojects/challenges/postlight_employee_directory_challenge/src/reportWebVitals.js":"3","/mnt/c/Users/Helen/webprojects/challenges/postlight_employee_directory_challenge/src/Sort/Sort.js":"4","/mnt/c/Users/Helen/webprojects/challenges/postlight_employee_directory_challenge/src/Browse/Browse.js":"5","/mnt/c/Users/Helen/webprojects/challenges/postlight_employee_directory_challenge/src/Employee/EmployeeCard.js":"6"},{"size":245,"mtime":1608066701102,"results":"7","hashOfConfig":"8"},{"size":1606,"mtime":1608066701073,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1607282186351,"results":"10","hashOfConfig":"8"},{"size":3070,"mtime":1608066701099,"results":"11","hashOfConfig":"8"},{"size":744,"mtime":1608066701080,"results":"12","hashOfConfig":"8"},{"size":1555,"mtime":1608066701089,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"tf2qfk",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"/mnt/c/Users/Helen/webprojects/challenges/postlight_employee_directory_challenge/src/index.js",[],"/mnt/c/Users/Helen/webprojects/challenges/postlight_employee_directory_challenge/src/App.js",[],["28","29"],"/mnt/c/Users/Helen/webprojects/challenges/postlight_employee_directory_challenge/src/reportWebVitals.js",[],"/mnt/c/Users/Helen/webprojects/challenges/postlight_employee_directory_challenge/src/Sort/Sort.js",["30","31","32"],"import React, {useState, useEffect} from 'react';\nimport { Card, Divider, Header, Icon, Menu, Dropdown } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css'\nimport EmployeeCard from '../Employee/EmployeeCard'\n\nconst Sort = ({employees}) => {\n\n  const [employeeGroup, setEmployees] = useState(employees);\n  const [nations, setNations] = useState([]);\n  const [filtering, setFiltering] = useState(false);\n  const [filterKey, setFilterKey] = useState();\n  const [filterValue, setFilterValue] = useState();\n\n  useEffect(() => {\n    setEmployees(employees)\n  }, [employees])\n\n  useEffect(() => {\n    function createDropdownNations() {\n      let nationRawResults = []\n      employeeGroup.map(employee => {\n          nationRawResults.push(employee.nat)\n        });\n      let nationSet = [...new Set(nationRawResults)];\n      setNations(nationSet)\n    }\n\n    createDropdownNations();\n  }, []);\n\n  const genderExpressions = [ {\"Women\" : \"female\"}, {\"Men\" : \"male\"}, {\"Other/Unaffiliated\" : \"other\"} ]\n\n  const filterByNation = (value) => {\n    setFilterKey(\"nat\")\n    setFilterValue(value);\n    setFiltering(true);\n  }\n\n  const filterByGender = (value) => {\n    let gender = value[0]\n    setFilterKey(\"gender\")\n    setFilterValue(gender);\n    setFiltering(true);\n  }\n\n  return (\n    <div className=\"sort-employees\">\n      <Divider horizontal>\n        <Header as='h4'>\n          <Icon name='sort' />\n            Sort\n        </Header>\n      </Divider>\n      <Menu text>\n        <Menu.Item header>Sort By</Menu.Item>\n          <Dropdown text='Nationality' pointing className='link item'>\n            <Dropdown.Menu>\n            {nations.map((nation, index) => {\n              return (\n                <Dropdown.Item key={index} onClick={()=>filterByNation(nation)}>{nation}</Dropdown.Item>\n              );\n              })\n            }\n            </Dropdown.Menu>\n          </Dropdown>\n          <Dropdown text='Gender Identity' pointing className='link item'>\n            <Dropdown.Menu>\n              {genderExpressions.map((gender, index) => {\n                return (<Dropdown.Item key={index} onClick={() => filterByGender(Object.values(gender))}>{Object.keys(gender)}</Dropdown.Item>);\n                })\n              }\n            </Dropdown.Menu>\n          </Dropdown>\n      </Menu>\n      <Card.Group>\n        {!filtering ?\n          employeeGroup.map((employee, index) => {\n            return (\n              <EmployeeCard\n                employee={employee}\n                key={index}\n                index={index}\n              />\n            )\n          }) :\n          employeeGroup.map((employee, index) => {\n            if (employee[filterKey] === filterValue) {\n              return (\n                <EmployeeCard\n                  employee={employee}\n                  key={index}\n                  index={index}\n                />\n              )\n            }\n            if (filterKey === \"dob.age\") {\n              <p>{employee[filterKey]}</p>\n            }\n          })\n        }\n      </Card.Group>\n    </div>\n  )\n}\n\nexport default Sort\n","/mnt/c/Users/Helen/webprojects/challenges/postlight_employee_directory_challenge/src/Browse/Browse.js",[],"/mnt/c/Users/Helen/webprojects/challenges/postlight_employee_directory_challenge/src/Employee/EmployeeCard.js",[],{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":21,"column":34,"nodeType":"39","messageId":"40","endLine":21,"endColumn":36},{"ruleId":"41","severity":1,"message":"42","line":29,"column":6,"nodeType":"43","endLine":29,"endColumn":8,"suggestions":"44"},{"ruleId":"37","severity":1,"message":"45","line":86,"column":47,"nodeType":"39","messageId":"46","endLine":86,"endColumn":49},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'employeeGroup'. Either include it or remove the dependency array.","ArrayExpression",["49"],"Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","no-global-assign","no-unsafe-negation",{"desc":"50","fix":"51"},"Update the dependencies array to be: [employeeGroup]",{"range":"52","text":"53"},[897,899],"[employeeGroup]"]